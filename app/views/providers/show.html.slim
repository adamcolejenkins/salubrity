= render 'header'

section.resource id="provider-#{@provider.id}"

  .row(data-equalizer)

    / Provider Info Block
    article.header
      = render 'info_block', provider: @provider

    / Responses Block
    article.response-chart
      .block-panel(data-equalizer-watch)
        .content
          .stat
            big = @provider.responses.count
            span.muted  responses
          .chart bar-graph=""
            = column_chart chart_provider_path(@provider, :responses), height: "100%"

    / Timing Chart
    article.timing-chart
      .block-panel(data-equalizer-watch)
        .content
          .stat
            big = @provider.average_time || "00:00"
            span.muted  avg time to complete
          .chart bar-graph=""
            = column_chart chart_provider_path(@provider, :timing), height: "100%"

  .row(data-equalizer)
    - @provider.data_fields.each do |field|
      article class="#{field.context.gsub('_', '-')}"
        = render "providers/charts/#{field.context}", field: field

  .row

    article.responses-table
      .block-panel.table
        .header Response Data
        .content

          table#provider-response-table.response-table.display.no-border role="grid" data-source="#{data_provider_path(format: :json)}"
            thead
              tr
                / Tools
                / th width="10" = check_box_tag 'select_all', nil, false, disabled: 'disabled'

                / Date
                th width="100" Date

                / Fields
                - @provider.data_fields.each_with_index do |field, index|
                  th class="#{field.context}"
                    div
                      span.ellipsis = "#{(index + 1).to_s} - #{field.label}"

                / Start date
                th Response Time

            tbody
              / - @provider.responses.active.each do |response|
              /   tr
                  
              /     / Tools
              /     td
              /       = check_box_tag 'select', nil, false, disabled: 'disabled'

              /     / Date
              /     td = response.created_at.to_formatted_s(:long)
                  
              /     / Fields
              /     - @provider.data_fields.each do |field|
              /       td class="#{field.context}"
              /         - answer = response.answers.where(field: field).first
              /         = answer.response_value unless answer.blank?
                  
              /     / Response Time
              /     td = Time.at(response.time).utc.strftime("%M:%S")